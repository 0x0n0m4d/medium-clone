version: '3.5'

services:
  postgres:
    image: postgres:17.2
    hostname: postgres
    user: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: randompassword
    command: postgres -c 'max_connections=450'
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '1GB'

  redis:
    image: redis:7.4.2
    hostname: redis
    command: redis-server --save "" --appendonly no --maxclients 20000
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.8GB'

  app1: &app
    build: .
    depends_on:
      - postgres
      - redis
    hostname: app1.com
    healthcheck:
      test: curl -f http://app1:3000
  app2:
    <<: *app
    hostname: app2.com
    command: yarn dev
    healthcheck:
      test: curl -f http://app2:3000

  nginx:
    image: nginx:1.27.4
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.5GB'


networks:
  default:
    driver: bridge
    name: medium
